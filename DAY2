// IMPLEMENTATION OF HALF_ADDER AND HALF_SUBTRACTOR

********VERILOG CODE***********

1.HALF_ADDER
module half_adder(A,B,SUM,CARRY);
  input A,B;
  output SUM,CARRY;
  
  //assign SUM=(!A)*B+A*(!B);
  //assign CARRY=A*B;
  
  assign SUM=A^B;
  assign CARRY=A*B;
endmodule

2.HALF_SUBTRACTOR
module half_Subtractor(A,B,Diff,Borr);
  input A,B;
  output Diff,Borr;
  
  //assign Diff=(!A)*B+A*(!B);
  //assign Borr=(!A)*B;
  
  assign Diff=A^B;
  assign Borr=(!A)*B;
endmodule

****TESTBENCH CODE****

1.HALF_ADDER
module testbench();
  reg A,B;
  wire SUM,CARRY;
  
  half_adder tb(A,B,SUM,CARRY);
  initial 
    begin
      $dumpfile("dump.vcd");
      $dumpvars(1,testbench);
    end
  initial
    begin
      $monitor("time=%0t | A=%b  B=%b SUM=%b  CARRY=%b",$time,A,B,SUM,CARRY);
      A=0;B=0;
      #10A=0;B=1;
      #10A=1;B=0;
      #10A=1;B=1;
      #10
      $finish;
    end
endmodule

2.HALF_SUBTRACTOR
module testbench();
  reg A,B;
  wire Diff,Borr;
  
  half_Subtractor tb(A,B,Diff,Borr);
  initial 
    begin
      $dumpfile("dump.vcd");
      $dumpvars(1,testbench);
    end
  initial
    begin
      $monitor("time=%0t | A=%b  B=%b Difference=%b  Borrow=%b",$time,A,B,Diff,Borr);
      A=0;B=0;
      #10A=0;B=1;
      #10A=1;B=0;
      #10A=1;B=1;
      #10
      $finish;
    end
endmodule
