// IMPLEMENTATION OF 8X8 RAM
******** VERILOG CODE **************
  module RAM(wr,din,dout,clk,addr);
  input clk,wr;
  input [7:0]din;
  input [2:0]addr;
  output reg [7:0]dout;
  
  reg [7:0]memory[7:0];
  
  always @(posedge clk)begin
    if(wr)begin
      memory[addr]<=din;
    end
    else begin
      dout<=memory[addr];
    end
  end
endmodule
      
********** TESTBENCH CODE **************
    module tb_RAM;
  reg clk;
  reg wr;
  reg [7:0] din;
  reg [2:0] addr;
  wire [7:0] dout;

  RAM uut (
    .wr(wr),
    .din(din),
    .dout(dout),
    .clk(clk),
    .addr(addr)
  );

  initial begin
    clk = 0;
    forever #5 clk = ~clk;
  end

  initial begin
    $dumpfile("RAM.vcd");
    $dumpvars(1, tb_RAM);

    wr = 1;
    din = 8'd0;
    for (int i = 0; i < 8; i++) begin
      addr = i[2:0];
      din = i * 8;
      $display("Addr=%0d | Data=%0d", addr, din);
      #10;
    end

    wr = 0;
    for (int i = 0; i < 8; i++) begin
      addr = i[2:0];
      #10;
      $display("Addr=%0d | Data=%0d", addr, dout);
    end

    $finish;
  end
endmodule
