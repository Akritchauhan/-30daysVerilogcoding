// IMPLEMENTATION OF UART

******* VERILOG CODE ***********
module uart_tx #(parameter BAUD_DIV=868)(
  input clk,
  input rst,
  input tx_start,
  input [7:0] tx_data,
  output reg tx,
  output reg tx_busy
);

  reg [3:0] bit_cnt;
  reg [15:0] baud_cnt;
  reg [9:0] shift_reg;

  always @(posedge clk or posedge rst) begin
    if(rst) begin
      tx <= 1;
      tx_busy <= 0;
      baud_cnt <= 0;
      bit_cnt <= 0;
    end
    else if(tx_start && !tx_busy) begin
      shift_reg <= {1'b1, tx_data, 1'b0};
      tx_busy <= 1;
      bit_cnt <= 0;
      baud_cnt <= 0;
    end
    else if(tx_busy) begin
      if(baud_cnt < BAUD_DIV - 1)
        baud_cnt <= baud_cnt + 1;
      else begin
        baud_cnt <= 0;
        tx <= shift_reg[bit_cnt];
        bit_cnt <= bit_cnt + 1;
        if(bit_cnt == 9) begin
          tx_busy <= 0;
          tx <= 1;
        end
      end
    end
  end

endmodule


********* TESTBENCH CODE ***********
module testbench();
  reg clk, rst, tx_start;
  reg [7:0] tx_data;
  wire tx, tx_busy;

  uart_tx uut(clk, rst, tx_start, tx_data, tx, tx_busy);

  initial begin
    clk = 0;
    forever #5 clk = ~clk;
  end

  initial begin
    $dumpfile("dump.vcd");
    $dumpvars(1, testbench);
    
    $monitor("Time=%0t | tx_data=%b | tx=%b | tx_busy=%b", $time, tx_data, tx, tx_busy);

    rst = 1; tx_start = 0; tx_data = 8'd0; #20;
    rst = 0;

    tx_data = 8'b10101010; tx_start = 1; #10;
    tx_start = 0; wait (!tx_busy); #20;

    tx_data = 8'b11001100; tx_start = 1; #10;
    tx_start = 0; wait (!tx_busy); #20;

    tx_data = 8'b11110000; tx_start = 1; #10;
    tx_start = 0; wait (!tx_busy); #20;

    $finish;
  end
endmodule
